<?xml version="1.0"?>
<project name="blobBucket" basedir="../">
	<description>
		ANT SCRIPT
	</description>

	<property name="src.main.java" value="${basedir}/src/main/java" />
	<property name="src.main.resources" value="${basedir}/src/main/resources" />
	<property name="src.main.webapp" value="${basedir}/src/main/webapp" />
	<property name="src.main.reports" value="${basedir}/src/main/jasperreports" />
	<property name="build.dir" value="${basedir}/target" />
	<property name="build.reports.dir" value="jasperreports" />
	<property name="build.reports.compiled.dir" value="compiled" />
	<property name="build.main.classes.dir" value="${build.dir}/classes" />
	<property name="build.test.classes.dir" value="${build.dir}/test-classes" />
	<property name="build.war.dir" value="${build.dir}/war" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="lib.compile.dir" value="${lib.dir}/compile" />
	<property name="lib.provided.dir" value="${lib.dir}/provided" />
	<property name="lib.runtime.dir" value="${lib.dir}/runtime" />
	<property name="lib.generated.dir" value="${build.dir}/generated" />
	<property name="lib.test.dir" value="${lib.dir}/test" />
	<property name="project.artifactId" value="ROOT" />
	<property name="project.packaging" value="war" />
	<property name="all.in.one.archive.format" value="zip" />
	<property name="deployment.war.file.name" value="ROOT.war" />


	<!-- Loading properties from properties file and it will override default properties -->
	<loadproperties srcfile="ant/build.properties" />

	<!-- Build paths -->


	<path id="compile.classpath">
		<fileset dir="${lib.compile.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="provided.classpath">
		<fileset dir="${lib.provided.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="runtime.classpath">
		<fileset dir="${lib.runtime.dir}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="test.classpath">
		<fileset dir="${lib.test.dir}">
			<include name="*.jar" />
		</fileset>
	</path>



	<!--
	<taskdef name="jrc" classname="net.sf.jasperreports.ant.JRAntCompileTask">
	
		<classpath refid="compile.classpath" />
		<classpath refid="provided.classpath" />
		
	</taskdef>
	-->

	<target name="clean">
		<delete dir="${build.dir}" />
		<mkdir dir="${build.dir}" />
	</target>

	<target name="compile">

		<delete dir="${build.main.classes.dir}" />
		<mkdir dir="${build.main.classes.dir}" />

		<echo message="compiling java source file from ${src.main.java} to ${build.main.classes.dir}" />
		<javac destdir="${build.main.classes.dir}" debug="true" srcdir="${src.main.java}">

			<classpath refid="compile.classpath" />
			<classpath refid="provided.classpath" />

		</javac>
		<copy todir="${build.main.classes.dir}">
			<fileset dir="${src.main.resources}" />
		</copy>

	</target>

	<target name="war">
		<delete dir="${build.war.dir}" />
		<mkdir dir="${build.war.dir}" />

		<echo message="building war folder at ${build.war.dir}" />

		<copy todir="${build.war.dir}">
			<fileset dir="${src.main.webapp}" />
		</copy>
		<delete dir="${build.war.dir}/WEB-INF/lib" />
		<delete dir="${build.war.dir}/WEB-INF/classes" />

		<copy todir="${build.war.dir}/WEB-INF/lib" overwrite="true">
			<fileset dir="${lib.compile.dir}" />
			<fileset dir="${lib.runtime.dir}" />
			<!--
			<fileset dir="${lib.generated.dir}" />
			-->
		</copy>

		<copy todir="${build.war.dir}/WEB-INF/classes">
			<fileset dir="${build.main.classes.dir}" />
		</copy>

		<war destfile="${build.dir}/${project.artifactId}.war" webxml="${build.war.dir}/WEB-INF/web.xml">
			<fileset dir="${build.war.dir}" />
			<!--
			<lib dir="${build.war.dir}/WEB-INF/lib" />
			-->
			<classes dir="${build.war.dir}/WEB-INF/classes" />
		</war>


	</target>

	<target name="jar">


	</target>

	<target name="ear">


	</target>


	<target name="package">
		<antcall target="clean" />
		<antcall target="compile" />
		<antcall target="generateJARS" />
		<antcall target="${project.packaging}" />
	</target>


	<target name="packInOneArchiveFile">
		<move overwrite="true" tofile="${build.dir}/${deployment.war.file.name}">
			<fileset dir="${build.dir}" includes="*.war" />
		</move>

		<antcall target="generateJARS" />
		<zip destfile="${build.dir}/${project.artifactId}.${all.in.one.archive.format}">

			<fileset dir="${lib.generated.dir}" includes="*.*" />
			<fileset dir="${build.dir}" includes="*.war" />
		</zip>

	</target>

	<target name="oldPackInOneArchiveFile">
		<antcall target="package" />
		<zip destfile="${build.dir}/${project.artifactId}.${all.in.one.archive.format}">
			<fileset dir="${lib.generated.dir}" includes="*.*" />
			<fileset dir="${build.dir}" includes="${project.artifactId}.${project.packaging}" />
		</zip>
	</target>

	<target name="generateJARS">
		<delete dir="${lib.generated.dir}" />
		<mkdir dir="${lib.generated.dir}" />
		<antcall target="packageReports" />
	</target>

	

	<target name="debugTomcat">
		<echo message="Starting tomcat..." />
		<exec executable="${tomcat.home}/bin/${catalina.fileName}">
				
			<env key="CATALINA_HOME" value="${tomcat.home}" />
			<env key="JAVA_OPTS" value="-server -Xmx2048m" />
			
			<!-- 	
			<env key="JPDA_SUSPEND" value="y" />
			<env key="JPDA_ADDRESS" value="9555" />
			-->			
			<arg value="jpda" />
			<arg value="start" />
		</exec>
	</target>

	<target name="startTomcat">
		<echo message="Starting tomcat..." />
		<exec executable="${tomcat.home}/bin/${catalina.fileName}">
			<env key="CATALINA_HOME" value="${tomcat.home}" />
			<arg value="start" />
		</exec>
	</target>

	<target name="stopTomcat">
		<exec executable="${tomcat.home}/bin/${catalina.fileName}">
			<env key="CATALINA_HOME" value="${tomcat.home}" />
			<arg value="stop" />
		</exec>
	</target>



	<target name="buildWithMaven">
		<echo message="Building war through maven..." />
		<!--
		<exec executable="${basedir}/ant/maven_install.bat" />
		-->
		<exec  executable="${maven.home}/bin/mvn">
		     <arg line="clean install" />
		</exec>
	</target>



	<target name="deployWar">
		<echo message="Cleaning deployment directory (${deployment.dir}/${deployment.war.file.name}..." />
		<delete dir="${deployment.dir}/${project.artifactId}" />
		<echo message="Cleaning deployment directory (${deployment.dir}/${deployment.war.file.name})..." />
		<delete file="${deployment.dir}/${deployment.war.file.name}" />
		<echo message="Copying war file..." />
		<copy overwrite="true" tofile="${deployment.dir}/${deployment.war.file.name}">
			<fileset dir="${build.dir}">
				<include name="**/*.war" />
			</fileset>
		</copy>
	</target>

	<target name="deployExplodedWar">
		<echo message="Deleting files from ${deployment.dir}" />
		<delete dir="${deployment.dir}/ROOT" />
		<delete file="${deployment.dir}/${deployment.war.file.name}" />
		<mkdir dir="${deployment.dir}" />
		<echo message="Expanding war file..." />
		<unwar src="${build.dir}/${deployment.war.file.name}" dest="${deployment.dir}" />
	</target>

	<target name="buildAndDeployWar">
		<antcall target="stopTomcat" />
		<echo message="Deleting WAR files from your build dir..." />
		<delete dir="${build.dir}" />
		<antcall target="buildWithMaven" />
		
		<!--
		<antcall target="package" />
		<antcall target="generateJARS" />
		-->
		<sleep seconds="5" />
		<antcall target="deployWar" />
	</target>

	<target name="buildDeployAndDebugServer">
		<antcall target="buildAndDeployWar" />
		<antcall target="debugTomcat" />
	</target>


	<target name="buildAndDeployExplodedWar">
		<antcall target="buildWithMaven" />
		<antcall target="stopTomcat" />
		<antcall target="deployExplodedWar" />
	</target>

	<target name="runSQLScript">
		<echo message="driver path  = ${db.driver.path}" />
		<echo message="driver class = ${db.driver.class}" />
		<echo message="host name    = ${db.hostname}" />
		<echo message="port = ${db.port}" />
		<echo message="sid = ${db.sid}" />
		<echo message="user = ${db.user}" />
		<echo message="password = ${db.password}" />
		<sql classpath="${lib.compile.dir}/${db.jdbc.jar.name}" driver="oracle.jdbc.driver.OracleDriver" url="jdbc:oracle:thin:@${db.hostname}:${db.port}:${db.sid}" userid="${db.user}" password="${db.password}" delimiter="/" delimitertype="row" src="${db.sql.script}" print="true" />

	</target>
</project>